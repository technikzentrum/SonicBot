name: ESP8266 Build

on:
  push:
    branches: [master]
  workflow_dispatch: # Ermöglicht das manuelle Auslösen des Workflows

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Arduino CLI
      uses: arduino/setup-arduino-cli@v1

    - name: Add ESP8266 Board Manager URL
      run: arduino-cli config init --additional-urls http://arduino.esp8266.com/stable/package_esp8266com_index.json

    - name: Update Core Index
      run: arduino-cli core update-index

    - name: Install ESP8266 Core
      run: arduino-cli core install esp8266:esp8266

    - name: Install Libraries
      run: |
        arduino-cli lib install "ESPAsyncTCP"
        arduino-cli lib install "ESPAsyncWebServer"
        arduino-cli lib install "ArduinoJson"

    - name: Compile Sketch
      run: arduino-cli compile --fqbn esp8266:esp8266:nodemcuv2 --output-dir ${{ github.workspace }}/build ${{ github.workspace }}/sonicBot/sonicBot.ino

    #- name: Create SPIFFS Image
    #  run: arduino-cli compile --fqbn esp8266:esp8266:nodemcuv2 --output-dir ${{ github.workspace }}/build --build-property "recipe.hooks.sketch.prebuild.1.pattern=python {runtime.tools.mkspiffs.path}/mkspiffs -c data -p 256 -b 8192 -s 2072576 {build.path}/spiffs.bin" ${{ github.workspace }}/sonicBot/sonicBot.ino

    - name: List contents of build directory
      run: ls -lR ${{ github.workspace }}/build
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/build/sonicBot.ino.bin
        asset_name: sonicBot.ino.bin
        asset_content_type: application/octet-stream
        
    #- name: Upload SPIFFS Image
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    asset_path: ${{ github.workspace }}/build/spiffs.bin
    #    asset_name: sonicBot.spiffs.bin
    #    asset_content_type: application/octet-stream
